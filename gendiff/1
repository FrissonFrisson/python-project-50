def format_recursive(data, symb=' ', count=4, depth=1):
    result = []
    indent = symb * count
    special_symb = ' '
    for diff in data:
        key = diff.get('key')
        status = diff.get('status')
        if status == 'nested':
            result.append(f'{(indent * depth)[:-2]}{special_symb} {key}: {{')
            result.append(format_recursive(diff['nested'], depth=depth + 1))
            result.append(f'{(indent * depth)[:-2]}{special_symb} }}')
        elif status == 'changed':
            old_value = format_nested(diff['old_value'], symb * count, depth + 1)
            new_value = format_nested(diff['new_value'], symb * count, depth + 1)
            result.append(f'{(indent * depth)[:-2]}- {key}: {old_value}')
            result.append(f'{(indent * depth)[:-2]}+ {key}: {new_value}')
        else:
            symb_diff = {
                'unchanged': ' ',
                'added': '+',
                'removed': '-'
            }
            value = format_nested(diff['value'], symb * count, depth + 1)
            result.append(f'{(indent * depth)[:-2]}{symb_diff[status]} {key}: {value}') 
    return '\n'.join(result)